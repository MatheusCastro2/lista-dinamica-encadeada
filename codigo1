#include <stdio.h>
#include <stdlib.h>
#include <conio.h>

typedef struct no
{
    int valor;
    struct no *proximo;
} No;

// aqui vamos colocar elementos no inicio da lista

void inserir_inicio(No **lista, int num)
{
    No *novo = malloc(sizeof(No));
    if (novo)
    {
        novo->valor = num;
        novo->proximo = *lista; // aqui o nosso NO vai apontar para o começo da nossa lista
        *lista = novo;
    }
    else
    {
        printf("Erro ao alucar memoria!\n");
    }
}

// aqui vamos colocar elementos no final da lista

void inserir_fim(No **lista, int num)
{
    No *aux, *novo = malloc(sizeof(No));

    if (novo)
    {
        novo->valor = num;
        novo->proximo = NULL;

        // é o primeiro?
        if (*lista == NULL)
            *lista = novo;
        else
        {
            aux = *lista;
            while (aux->proximo)
                aux = aux->proximo;
            aux->proximo = novo;
        }
    }
    else
    {
        printf("Erro ao alocar na memoria!\n");
    }
}

void imprimir(No *no)
{
    printf("\n\tLista: ");
    while (no)
    {
        printf("%d", no->valor);
        no = no->proximo;
    }
    printf("\n\n");
}

int main(void)
{
    int opc;
    printf("|------------------------------------------------|\n");
    printf("|---1-Inserir um elemento no inicio--------------|\n");
    printf("|---2-Inserir um elemento no final da lista------|\n");
    printf("|---3-Remover um elemento com valor especifico---|\n");
    printf("|---4-Buscar elemento----------------------------|\n");
    printf("|---5-Exibir todos os elementos da lista---------|\n");
    printf("|------------------------------------------------|");
    scanf("%d", &opc);
    do
    {
        switch (opc)
        {
        case 1:
            inserir_inicio();
            break;

        case 2:

            break;

        case 3:

            break;

        case 4:

            break;

        case 5:

            break;

        default:
            if (opc != 0)
                printf("opcao invalida!\n");
            break;
        }
    } while (opc != 0);
}
